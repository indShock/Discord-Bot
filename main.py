import discord
from discord.ext import commands
import logging
import asyncio
from datetime import datetime
from config import TOKEN, PREFIX
from database import init_db, get_db, User, UserStats
from decorators import log_command, has_permissions
import random
import sqlalchemy as sa

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)


class MyBot(commands.Bot):
    def __init__(self):
        # –ü—Ä–∞–≤–∏–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è intents
        intents = discord.Intents.default()
        intents.messages = True
        intents.message_content = True
        intents.members = True
        intents.guilds = True

        super().__init__(command_prefix=PREFIX, intents=intents)

        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        init_db()

    async def setup_hook(self):
        """–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞"""
        logger.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è...")

    async def on_ready(self):
        """–í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∫–æ–ª–∏ –±–æ—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏"""
        logger.info(f'–ë–æ—Ç {self.user} —É–≤—ñ–π—à–æ–≤ —É —Å–∏—Å—Ç–µ–º—É!')
        print(f'–ë–æ—Ç {self.user} –æ–Ω–ª–∞–π–Ω!')

        # –°—Ç–≤–æ—Ä—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –±–æ—Ç–∞
        await self.change_presence(
            activity=discord.Activity(
                type=discord.ActivityType.listening,
                name=f"{PREFIX}help"
            )
        )

    async def on_message(self, message):
        """–û–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
        if message.author == self.user:
            return

        # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        await self.update_user_stats(message)

        await self.process_commands(message)

    async def update_user_stats(self, message):
        """–û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        try:
            with next(get_db()) as db:
                user = db.query(User).filter(User.discord_id == message.author.id).first()

                if not user:
                    user = User(
                        discord_id=message.author.id,
                        username=str(message.author),
                        message_count=1,
                        xp=5,
                        level=1
                    )
                    db.add(user)
                else:
                    user.message_count += 1
                    user.xp += 5

                    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å
                    new_level = user.xp // 100 + 1
                    if new_level > user.level:
                        user.level = new_level
                        await message.channel.send(
                            f"üéâ {message.author.mention} –¥–æ—Å—è–≥ {new_level} —Ä—ñ–≤–Ω—è! üéä"
                        )

                db.commit()
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")


# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = MyBot()


# –ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
@bot.command(name='hello')
@log_command
@commands.cooldown(1, 5, commands.BucketType.user)
async def hello(ctx):
    """–ü—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–∞ –∫–æ–º–∞–Ω–¥–∞"""
    await ctx.send(f'–ü—Ä–∏–≤—ñ—Ç, {ctx.author.mention}! üëã')


@bot.command(name='ping')
@log_command
async def ping(ctx):
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–Ω–≥—É –±–æ—Ç–∞"""
    latency = round(bot.latency * 1000)
    await ctx.send(f'üèì –ü–æ–Ω–≥! {latency}–º—Å')


@bot.command(name='stats')
@log_command
async def stats(ctx, member: discord.Member = None):
    """–ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    target = member or ctx.author

    try:
        with next(get_db()) as db:
            user = db.query(User).filter(User.discord_id == target.id).first()

            if user:
                embed = discord.Embed(
                    title=f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {target.name}",
                    color=discord.Color.blue()
                )
                embed.add_field(name="–†—ñ–≤–µ–Ω—å", value=user.level, inline=True)
                embed.add_field(name="XP", value=user.xp, inline=True)
                embed.add_field(name="–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è", value=user.message_count, inline=True)

                if target.avatar:
                    embed.set_thumbnail(url=target.avatar.url)

                await ctx.send(embed=embed)
            else:
                await ctx.send("‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await ctx.send("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!")


# –ö–æ–º–∞–Ω–¥–∏ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó
@bot.command(name='clear')
@has_permissions(manage_messages=True)
@log_command
async def clear(ctx, amount: int = 5):
    """–û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤)"""
    if amount > 100:
        await ctx.send("‚ùå –ù–µ –º–æ–∂–Ω–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –±—ñ–ª—å—à–µ 100 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å!")
        return

    try:
        deleted = await ctx.channel.purge(limit=amount + 1)
        message = await ctx.send(f'‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ {len(deleted) - 1} –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å!')
        await asyncio.sleep(5)
        await message.delete()
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è: {e}")
        await ctx.send("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å!")


@bot.command(name='kick')
@has_permissions(kick_members=True)
@log_command
async def kick(ctx, member: discord.Member, *, reason="–ù–µ –≤–∫–∞–∑–∞–Ω–æ"):
    """–ö—ñ–∫–Ω—É—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤)"""
    try:
        await member.kick(reason=reason)
        await ctx.send(f'‚úÖ {member.mention} –±—É–≤ –∫—ñ–∫–Ω—É—Ç! –ü—Ä–∏—á–∏–Ω–∞: {reason}')
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –∫—ñ–∫—É: {e}")
        await ctx.send("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∫—ñ–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!")


@bot.command(name='ban')
@has_permissions(ban_members=True)
@log_command
async def ban(ctx, member: discord.Member, *, reason="–ù–µ –≤–∫–∞–∑–∞–Ω–æ"):
    """–ó–∞–±–∞–Ω–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤)"""
    try:
        await member.ban(reason=reason)
        await ctx.send(f'‚úÖ {member.mention} –±—É–≤ –∑–∞–±–∞–Ω–µ–Ω–∏–π! –ü—Ä–∏—á–∏–Ω–∞: {reason}')
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –±–∞–Ω–∞: {e}")
        await ctx.send("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –±–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!")


# –†–æ–∑–≤–∞–∂–∞–ª—å–Ω–∏–π –º–æ–¥—É–ª—å
@bot.command(name='advice')
@log_command
@commands.cooldown(1, 10, commands.BucketType.user)
async def advice(ctx):
    """–û—Ç—Ä–∏–º–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤—É –ø–æ—Ä–∞–¥—É"""
    advice_list = [
        "–ù—ñ–∫–æ–ª–∏ –Ω–µ –≤—ñ–¥–∫–ª–∞–¥–∞–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞ —Ç–µ, —â–æ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ!",
        "–í—ñ—Ä—å —É —Å–µ–±–µ —ñ –≤—Å–µ –≤–∏–π–¥–µ!",
        "–ö—Ä–∞—â–µ —Ä–æ–±–∏—Ç–∏ —ñ —à–∫–æ–¥—É–≤–∞—Ç–∏, –Ω—ñ–∂ –Ω–µ —Ä–æ–±–∏—Ç–∏ —ñ —à–∫–æ–¥—É–≤–∞—Ç–∏!",
        "–ù–µ –±—ñ–π—Å—è –ø–æ–º–∏–ª—è—Ç–∏—Å—è - —Ü–µ —á–∞—Å—Ç–∏–Ω–∞ –Ω–∞–≤—á–∞–Ω–Ω—è!",
        "–ó–∞–≤–∂–¥–∏ –∑–Ω–∞–π–¥–∏ —á–∞—Å –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É!",
        "–ß–∏—Ç–∞–π –±—ñ–ª—å—à–µ –∫–Ω–∏–≥ - –≤–æ–Ω–∏ —Ä–æ–∑—à–∏—Ä—é—é—Ç—å –∫—Ä—É–≥–æ–∑—ñ—Ä!",
        "–ë—É–¥—å –¥–æ–±—Ä–∏–º –¥–æ —ñ–Ω—à–∏—Ö - —Ü–µ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è!"
    ]

    advice_text = random.choice(advice_list)
    embed = discord.Embed(
        title="üí° –ü–æ—Ä–∞–¥–∞ –¥–Ω—è",
        description=advice_text,
        color=discord.Color.gold()
    )
    await ctx.send(embed=embed)


@bot.command(name='ask')
@log_command
@commands.cooldown(1, 5, commands.BucketType.user)
async def ask(ctx, *, question):
    """–ó–∞–¥–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è –±–æ—Ç—É"""
    responses = [
        "–¢–∞–∫, –∑–≤–∏—á–∞–π–Ω–æ! ‚úÖ",
        "–ù—ñ, –Ω–µ –¥—É–º–∞—é. ‚ùå",
        "–ú–æ–∂–ª–∏–≤–æ... ü§î",
        "–°–∫–æ—Ä—ñ—à–µ –∑–∞ –≤—Å–µ —Ç–∞–∫! üëç",
        "–ú–∞–±—É—Ç—å –Ω—ñ. üëé",
        "–ê–±—Å–æ–ª—é—Ç–Ω–æ –≤–ø–µ–≤–Ω–µ–Ω–∏–π - —Ç–∞–∫! üåü",
        "–ó–æ—Å–µ—Ä–µ–¥—å—Å—è —ñ —Å–ø–∏—Ç–∞–π —â–µ —Ä–∞–∑! üîÑ",
        "–ù–∞—Ä–∞–∑—ñ –Ω–µ –º–æ–∂—É –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏... ‚è≥"
    ]

    response = random.choice(responses)
    embed = discord.Embed(
        title="üé± –ú–∞–≥—ñ—á–Ω–∞ –∫—É–ª—è",
        description=f"–ü–∏—Ç–∞–Ω–Ω—è: {question}\n–í—ñ–¥–ø–æ–≤—ñ–¥—å: {response}",
        color=discord.Color.purple()
    )
    await ctx.send(embed=embed)


# –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.CommandNotFound):
        await ctx.send("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞! –°–ø—Ä–æ–±—É–π !help")
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!")
    elif isinstance(error, commands.CommandOnCooldown):
        await ctx.send(f"‚è≥ –ó–∞—á–µ–∫–∞–π {error.retry_after:.1f} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º!")
    else:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –∫–æ–º–∞–Ω–¥–∏: {error}")
        await ctx.send("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏!")


if __name__ == "__main__":
    try:
        bot.run(TOKEN)
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")